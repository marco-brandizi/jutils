<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
  <modelVersion>4.0.0</modelVersion>
  <artifactId>jutils</artifactId>
  
  <name>JUtils - Core</name>
  <description>
  	General utility code for several purposes. 
  	
  	This is the core module, having minimal non-specific dependencies.
  </description>
  <url>https://github.com/marco-brandizi/jutils</url>

	<parent>
	  <groupId>uk.ac.ebi</groupId>
	  <artifactId>jutils-pom</artifactId>
  	<version>10.0RC</version>
	</parent>

	<dependencies>
	
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		
		<dependency>
		  <groupId>uk.org.lidalia</groupId>
		  <artifactId>lidalia-slf4j-ext</artifactId>
		</dependency>
		<!-- Lidalia uses this, but an older version.  -->
		<dependency>
		  <groupId>com.google.guava</groupId>
		  <artifactId>guava</artifactId>
		</dependency>		

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		
		<dependency>
		  <groupId>org.apache.commons</groupId>
		  <artifactId>commons-text</artifactId>
		</dependency>		

	  <dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	  </dependency>
	  		
		<dependency>
		  <groupId>org.apache.httpcomponents</groupId>
		  <artifactId>httpcomponents-core</artifactId>
		  <type>pom</type>
		  <version>4.4.4</version>
		</dependency>

		<!-- Little nice utility that improves exception handling --> 
		<dependency>
		  <groupId>com.machinezoo.noexception</groupId>
		  <artifactId>noexception</artifactId>
		</dependency>

		
		<!-- TEST -->

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>
		
		
		<!-- 
			OPTIONAL dependencies. These are not so general, so we don't force jutils's client to
			drag too much stuff with them. You need to declare these dependencies in your project in order
			to use the jutils functions related to them.
			
			For each optional dependency declared here, jutils packages that requires them are listed. 
			You typically need the dependency for sub-packages as well.
			
			If a jutils package make use of any optional dependency, it has the prefix 
			uk.ac.ebi.utils.opt.* Moreover, usually the artifactId is reused as base name for the 
			jutils package.
			
			The above rules should make it easy to match jutils dependencies with optional 3rd-party dependencies
			they rely upon when used.
			
			TODO: Use this approach to turn jutils back to a single package. 
		-->
		
		<!-- Required by:
			uk.ac.ebi.utils.opt.springweb
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-web</artifactId>
		  <version>5.3.8</version>
		  <optional>true</optional>
		</dependency>

	</dependencies>
	    
</project>
